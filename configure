local Library = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")

-- Function to convert Lucide icon name to SVG path data
local function getLucideIconPath(iconName)
    -- This function would contain a mapping of Lucide icon names to their SVG path data
    -- You would need to maintain this data from https://lucide.dev
    local icons = {
        -- Example format (you can add more from lucide.dev):
        ["home"] = "M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z",
        ["settings"] = "M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z",
        ["user"] = "M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2M12 3a4 4 0 1 0 0 8 4 4 0 1 0 0-8z",
        -- Add more icons as needed from lucide.dev
    }
    return icons[iconName:lower()]
end

-- Create SVG Icon
local function CreateSvgIcon(pathData, parent, size, color)
    local Icon = Instance.new("Frame")
    Icon.Size = UDim2.new(0, size, 0, size)
    Icon.BackgroundTransparency = 1
    Icon.Name = "Icon"

    -- Create the SVG path using frame shapes
    -- This is a simplified version - you'd need to implement proper SVG path parsing
    local Path = Instance.new("Frame")
    Path.Size = UDim2.new(1, 0, 1, 0)
    Path.BackgroundColor3 = color
    Path.BackgroundTransparency = 0
    ApplyCorners(Path, 1) -- Make it round for now
    Path.Parent = Icon

    Icon.Parent = parent
    return Icon
end

-- Utility functions (unchanged from before)
local function CreateTween(instance, properties, duration)
    local tweenInfo = TweenInfo.new(duration or 0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = TweenService:Create(instance, tweenInfo, properties)
    return tween
end

local function ApplyCorners(instance, radius)
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(radius, 0)
    UICorner.Parent = instance
end

[... rest of your existing window creation code remains the same until the button creation part ...]

        function tab:CreateButton(text, iconName, callback)
            local Button = Instance.new("TextButton")
            Button.Name = text.."Button"
            Button.Size = UDim2.new(0.9, 0, 0, 35)
            Button.Position = UDim2.new(0.05, 0, 0, 0)
            Button.BackgroundColor3 = Color3.fromRGB(0, 122, 255)
            Button.TextColor3 = Color3.fromRGB(255, 255, 255)
            Button.TextSize = 13 -- Slightly smaller for Apple-like appearance
            Button.Font = Enum.Font.GothamMedium -- More Apple-like font
            Button.BorderSizePixel = 0
            ApplyCorners(Button, 0.3) -- More curved corners
            
            -- Add icon if provided
            if iconName then
                local iconPath = getLucideIconPath(iconName)
                if iconPath then
                    local Icon = CreateSvgIcon(iconPath, Button, 16, Color3.fromRGB(255, 255, 255))
                    Icon.Position = UDim2.new(0, 10, 0.5, -8)
                    Button.Text = "    " .. text  -- Add padding for icon
                else
                    Button.Text = text
                end
            else
                Button.Text = text
            end
            
            Button.Parent = TabFrame
            
            -- Add modern hover effect
            local hoverOverlay = Instance.new("Frame")
            hoverOverlay.Size = UDim2.new(1, 0, 1, 0)
            hoverOverlay.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            hoverOverlay.BackgroundTransparency = 1
            hoverOverlay.BorderSizePixel = 0
            ApplyCorners(hoverOverlay, 0.3)
            hoverOverlay.Parent = Button
            
            Button.MouseEnter:Connect(function()
                CreateTween(hoverOverlay, {BackgroundTransparency = 0.9}):Play()
            end)
            
            Button.MouseLeave:Connect(function()
                CreateTween(hoverOverlay, {BackgroundTransparency = 1}):Play()
            end)
            
            Button.MouseButton1Click:Connect(function()
                -- Add click effect
                local clickOverlay = Instance.new("Frame")
                clickOverlay.Size = UDim2.new(1, 0, 1, 0)
                clickOverlay.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                clickOverlay.BackgroundTransparency = 0.7
                clickOverlay.BorderSizePixel = 0
                ApplyCorners(clickOverlay, 0.3)
                clickOverlay.Parent = Button
                
                CreateTween(clickOverlay, {BackgroundTransparency = 1}, 0.2):Play()
                wait(0.2)
                clickOverlay:Destroy()
                
                if callback then callback() end
            end)
        end

        function tab:CreateLabel(text)
            local Label = Instance.new("TextLabel")
            Label.Name = text.."Label"
            Label.Size = UDim2.new(0.9, 0, 0, 25)
            Label.Position = UDim2.new(0.05, 0, 0, 0)
            Label.BackgroundTransparency = 1
            Label.Text = text
            Label.TextColor3 = Color3.fromRGB(70, 70, 70)
            Label.TextSize = 13 -- Slightly smaller for Apple-like appearance
            Label.Font = Enum.Font.GothamMedium -- More Apple-like font
            Label.Parent = TabFrame
        end

[... rest of the library code remains the same ...]

return Library
