local Library = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Utility functions
local function CreateTween(instance, properties, duration)
    local tweenInfo = TweenInfo.new(duration or 0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = TweenService:Create(instance, tweenInfo, properties)
    return tween
end

local function ApplyCorners(instance, radius)
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(radius, 0)
    UICorner.Parent = instance
end

local function CreateButtonShadow(button)
    local Shadow = Instance.new("Frame")
    Shadow.Name = "Shadow"
    Shadow.AnchorPoint = Vector2.new(0.5, 0.5)
    Shadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Shadow.BackgroundTransparency = 0.9
    Shadow.Position = UDim2.new(0.5, 0, 0.5, 2)
    Shadow.Size = UDim2.new(1, 4, 1, 4)
    Shadow.ZIndex = button.ZIndex - 1
    ApplyCorners(Shadow, 0.3)
    Shadow.Parent = button
end

-- Rest of the window creation code remains the same until the tab functions

function window:CreateTab(name)
    -- Previous tab creation code remains the same
    
    function tab:CreateButton(text, callback)
        local Button = Instance.new("TextButton")
        Button.Name = text.."Button"
        Button.Size = UDim2.new(0.9, 0, 0, 35)
        Button.Position = UDim2.new(0.05, 0, 0, 0)
        Button.BackgroundColor3 = Color3.fromRGB(0, 122, 255)
        Button.Text = text
        Button.TextColor3 = Color3.fromRGB(255, 255, 255)
        Button.TextSize = 13
        Button.Font = Enum.Font.GothamMedium
        Button.BorderSizePixel = 0
        Button.ZIndex = 2
        ApplyCorners(Button, 0.3)
        CreateButtonShadow(Button)
        Button.Parent = TabFrame
        
        -- Enhanced hover effect with shadow animation
        local hoverOverlay = Instance.new("Frame")
        hoverOverlay.Size = UDim2.new(1, 0, 1, 0)
        hoverOverlay.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        hoverOverlay.BackgroundTransparency = 1
        hoverOverlay.BorderSizePixel = 0
        hoverOverlay.ZIndex = 3
        ApplyCorners(hoverOverlay, 0.3)
        hoverOverlay.Parent = Button
        
        Button.MouseEnter:Connect(function()
            CreateTween(hoverOverlay, {BackgroundTransparency = 0.9}):Play()
            CreateTween(Button.Shadow, {Position = UDim2.new(0.5, 0, 0.5, 4)}):Play()
        end)
        
        Button.MouseLeave:Connect(function()
            CreateTween(hoverOverlay, {BackgroundTransparency = 1}):Play()
            CreateTween(Button.Shadow, {Position = UDim2.new(0.5, 0, 0.5, 2)}):Play()
        end)
        
        Button.MouseButton1Click:Connect(function()
            if callback then callback() end
        end)
    end
    
    function tab:CreateToggle(text, callback)
        local Toggle = Instance.new("Frame")
        Toggle.Name = text.."Toggle"
        Toggle.Size = UDim2.new(0.9, 0, 0, 35)
        Toggle.Position = UDim2.new(0.05, 0, 0, 0)
        Toggle.BackgroundColor3 = Color3.fromRGB(245, 245, 245)
        Toggle.BorderSizePixel = 0
        ApplyCorners(Toggle, 0.3)
        Toggle.Parent = TabFrame
        
        local Label = Instance.new("TextLabel")
        Label.Size = UDim2.new(1, -60, 1, 0)
        Label.Position = UDim2.new(0, 10, 0, 0)
        Label.BackgroundTransparency = 1
        Label.Text = text
        Label.TextColor3 = Color3.fromRGB(70, 70, 70)
        Label.TextSize = 13
        Label.Font = Enum.Font.GothamMedium
        Label.TextXAlignment = Enum.TextXAlignment.Left
        Label.Parent = Toggle
        
        local ToggleButton = Instance.new("Frame")
        ToggleButton.Size = UDim2.new(0, 40, 0, 20)
        ToggleButton.Position = UDim2.new(1, -50, 0.5, -10)
        ToggleButton.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
        ToggleButton.BorderSizePixel = 0
        ApplyCorners(ToggleButton, 1)
        ToggleButton.Parent = Toggle
        
        local Knob = Instance.new("Frame")
        Knob.Size = UDim2.new(0, 16, 0, 16)
        Knob.Position = UDim2.new(0, 2, 0.5, -8)
        Knob.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Knob.BorderSizePixel = 0
        ApplyCorners(Knob, 1)
        CreateButtonShadow(Knob)
        Knob.Parent = ToggleButton
        
        local enabled = false
        local function updateToggle()
            CreateTween(ToggleButton, {BackgroundColor3 = enabled and Color3.fromRGB(0, 122, 255) or Color3.fromRGB(200, 200, 200)}):Play()
            CreateTween(Knob, {Position = enabled and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)}):Play()
            if callback then callback(enabled) end
        end
        
        -- Make the entire toggle clickable
        local ClickRegion = Instance.new("TextButton")
        ClickRegion.Size = UDim2.new(1, 0, 1, 0)
        ClickRegion.BackgroundTransparency = 1
        ClickRegion.Text = ""
        ClickRegion.Parent = Toggle
        
        ClickRegion.MouseButton1Click:Connect(function()
            enabled = not enabled
            updateToggle()
        end)
        
        -- Add hover effect
        ClickRegion.MouseEnter:Connect(function()
            CreateTween(Toggle, {BackgroundColor3 = Color3.fromRGB(235, 235, 235)}):Play()
        end)
        
        ClickRegion.MouseLeave:Connect(function()
            CreateTween(Toggle, {BackgroundColor3 = Color3.fromRGB(245, 245, 245)}):Play()
        end)
        
        -- Return functions to get/set toggle state
        return {
            Set = function(state)
                enabled = state
                updateToggle()
            end,
            Get = function()
                return enabled
            end
        }
    end
    
    return tab
end

return Library
